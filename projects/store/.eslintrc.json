{
	"env": {
		"es6": true,
		"browser": true,
		"jest": true,
		"node": true
	},
	"extends": [
		"next",
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:react-hooks/recommended",
		"plugin:import/errors",
		"plugin:import/warnings",
		"plugin:import/typescript",
		"plugin:@typescript-eslint/recommended",
		"plugin:jsx-a11y/recommended",
		"airbnb",
		"prettier"
	],
	"ignorePatterns": ["**/node_modules/*", "**/out/*", "**/.next/*", "/public/js/*", "@types/*", "/pages/example.tsx"],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "tsconfig.json",
		"sourceType": "module"
	},
	"plugins": ["react", "prettier", "eslint-plugin-import", "@typescript-eslint"],
	"rules": {
		"react/jsx-uses-react": "error",
		"react/jsx-filename-extension": "off",
		"react/jsx-props-no-spreading": "off",
		"react/jsx-fragments": "off",
		"react/no-array-index-key": "off",
		"react/react-in-jsx-scope": "off",
		"react/display-name": "off",
		"react/prop-types": [
			"off",
			{
				"ignore": [],
				"customValidators": [],
				"skipUndeclared": false
			}
		],
		"react/no-unescaped-entities": "off",
		"react-hooks/exhaustive-deps": "error",
		"react/require-default-props": "off",
		"import/prefer-default-export": "off",
		"import/extensions": "off",
		"import/order": "off",
		"import/no-cycle": [
			"off",
			{
				"maxDepth": "âˆž",
				"ignoreExternal": false
			}
		],
		"jsx-a11y/anchor-is-valid": "off",
		"jsx-a11y/label-has-associated-control": "off",
		"jsx-a11y/click-events-have-key-events": "off",
		"jsx-a11y/no-static-element-interactions": "off",
		"jsx-a11y/img-redundant-alt": "off",
		"prettier/prettier": "error",
		"no-extra-boolean-cast": "off",
		"no-underscore-dangle": [
			"off",
			{
				"allow": ["__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"],
				"allowAfterThis": false,
				"allowAfterSuper": false,
				"enforceInMethodNames": true,
				"allowAfterThisConstructor": false,
				"allowFunctionParams": true
			}
		],
		"consistent-return": "off",
		"camelcase": [
			"off",
			{
				"properties": "never",
				"ignoreDestructuring": false,
				"ignoreImports": false,
				"ignoreGlobals": false
			}
		],
		"no-restricted-syntax": [
			"off",
			{
				"selector": "ForInStatement",
				"message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
			},
			{
				"selector": "ForOfStatement",
				"message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
			},
			{
				"selector": "LabeledStatement",
				"message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
			},
			{
				"selector": "WithStatement",
				"message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
			}
		],
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": "error",

		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/explicit-member-accessibility": "off",
		"@typescript-eslint/indent": "off",
		"@typescript-eslint/member-delimiter-style": "off",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-var-requires": "off",
		"@typescript-eslint/no-empty-interface": "off",
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"argsIgnorePattern": "^_"
			}
		],
		"no-console": "error",

		"@next/next/google-font-display": "warn",
		"@next/next/google-font-preconnect": "warn",
		"@next/next/inline-script-id": "error",
		"@next/next/link-passhref": "warn",
		"@next/next/next-script-for-ga": "warn",
		"@next/next/no-css-tags": "warn",
		"@next/next/no-document-import-in-page": "error",
		"@next/next/no-duplicate-head": "error",
		"@next/next/no-head-import-in-document": "error",
		"@next/next/no-html-link-for-pages": "warn",
		"@next/next/no-img-element": "warn",
		"@next/next/no-page-custom-font": "warn",
		"@next/next/no-script-in-document": "error",
		"@next/next/no-script-in-head": "error",
		"@next/next/no-sync-scripts": "warn",
		"@next/next/no-title-in-document-head": "warn",
		"@next/next/no-typos": "warn",
		"@next/next/no-unwanted-polyfillio": "warn",
		"@typescript-eslint/adjacent-overload-signatures": "error",
		"@typescript-eslint/ban-ts-comment": "error",
		"@typescript-eslint/ban-types": "error",
		"@typescript-eslint/brace-style": "off",
		"@typescript-eslint/comma-dangle": "off",
		"@typescript-eslint/comma-spacing": "off",
		"@typescript-eslint/func-call-spacing": "off",
		"@typescript-eslint/keyword-spacing": "off",
		"@typescript-eslint/no-array-constructor": "error",
		"@typescript-eslint/no-empty-function": "off",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"@typescript-eslint/no-extra-parens": "off",
		"@typescript-eslint/no-extra-semi": "off",
		"@typescript-eslint/no-floating-promises": "error",
		"@typescript-eslint/no-inferrable-types": "error",
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-namespace": "error",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
		"@typescript-eslint/no-non-null-assertion": "warn",
		"@typescript-eslint/no-shadow": [
			"error",
			{
				"hoist": "all"
			}
		],
		"@typescript-eslint/no-this-alias": "error",
		"@typescript-eslint/no-unnecessary-type-assertion": "error",
		"@typescript-eslint/object-curly-spacing": "off",
		"@typescript-eslint/prefer-as-const": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"@typescript-eslint/quotes": "off",
		"@typescript-eslint/semi": "off",
		"@typescript-eslint/space-before-function-paren": "off",
		"@typescript-eslint/space-infix-ops": "off",
		"@typescript-eslint/triple-slash-reference": "error",
		"@typescript-eslint/type-annotation-spacing": "off",
		"@typescript-eslint/unified-signatures": "error",
		"accessor-pairs": "off",
		"array-bracket-newline": ["off", "consistent"],
		"array-bracket-spacing": ["off", "never"],
		"array-callback-return": [
			"error",
			{
				"allowImplicit": true,
				"checkForEach": false
			}
		],
		"array-element-newline": [
			"off",
			{
				"multiline": true,
				"minItems": 3
			}
		],
		"arrow-body-style": [
			"error",
			"as-needed",
			{
				"requireReturnForObjectLiteral": false
			}
		],
		"arrow-parens": ["off", "always"],
		"arrow-spacing": [
			"off",
			{
				"before": true,
				"after": true
			}
		],
		"block-scoped-var": "error",
		"block-spacing": ["off", "always"],
		"brace-style": [
			"off",
			"1tbs",
			{
				"allowSingleLine": true
			}
		],
		"callback-return": "off",
		"capitalized-comments": [
			"off",
			"never",
			{
				"line": {
					"ignorePattern": ".*",
					"ignoreInlineComments": true,
					"ignoreConsecutiveComments": true
				},
				"block": {
					"ignorePattern": ".*",
					"ignoreInlineComments": true,
					"ignoreConsecutiveComments": true
				}
			}
		],
		"class-methods-use-this": "off",
		"comma-dangle": "off",
		"comma-spacing": [
			"off",
			{
				"before": false,
				"after": true
			}
		],
		"comma-style": [
			"off",
			"last",
			{
				"exceptions": {
					"ArrayExpression": false,
					"ArrayPattern": false,
					"ArrowFunctionExpression": false,
					"CallExpression": false,
					"FunctionDeclaration": false,
					"FunctionExpression": false,
					"ImportDeclaration": false,
					"ObjectExpression": false,
					"ObjectPattern": false,
					"VariableDeclaration": false,
					"NewExpression": false
				}
			}
		],
		"complexity": ["off", 11],
		"computed-property-spacing": ["off", "never"],
		"consistent-this": "off",
		"constructor-super": "error",
		"curly": ["off", "multi-line"],
		"default-case": [
			"error",
			{
				"commentPattern": "^no default$"
			}
		],
		"default-case-last": "off",
		"default-param-last": "off",
		"dot-location": ["off", "property"],
		"dot-notation": [
			"error",
			{
				"allowKeywords": true,
				"allowPattern": ""
			}
		],
		"eol-last": ["off", "always"],
		"eqeqeq": ["error", "always"],
		"for-direction": "error",
		"func-call-spacing": ["off", "never"],
		"func-name-matching": [
			"off",
			"always",
			{
				"includeCommonJSModuleExports": false,
				"considerPropertyDescriptor": true
			}
		],
		"func-names": "warn",
		"func-style": ["off", "expression"],
		"function-call-argument-newline": ["off", "consistent"],
		"function-paren-newline": ["off", "consistent"],
		"generator-star": "off",
		"generator-star-spacing": [
			"off",
			{
				"before": false,
				"after": true
			}
		],
		"getter-return": [
			"error",
			{
				"allowImplicit": true
			}
		],
		"global-require": "error",
		"grouped-accessor-pairs": "off",
		"guard-for-in": "error",
		"handle-callback-err": "off",
		"id-blacklist": "off",
		"id-denylist": "off",
		"id-length": "off",
		"id-match": "off",
		"implicit-arrow-linebreak": ["off", "beside"],
		"import/default": "off",
		"import/dynamic-import-chunkname": [
			"off",
			{
				"importFunctions": [],
				"webpackChunknameFormat": "[0-9a-zA-Z-_/.]+"
			}
		],
		"import/export": "error",
		"import/exports-last": "off",
		"import/first": "error",
		"import/group-exports": "off",
		"import/imports-first": "off",
		"import/max-dependencies": [
			"off",
			{
				"max": 10
			}
		],
		"import/named": "error",
		"import/namespace": "off",
		"import/newline-after-import": "error",
		"import/no-absolute-path": "error",
		"import/no-amd": "error",
		"import/no-anonymous-default-export": [
			"off",
			{
				"allowArray": false,
				"allowArrowFunction": false,
				"allowAnonymousClass": false,
				"allowAnonymousFunction": false,
				"allowLiteral": false,
				"allowObject": false
			}
		],
		"import/no-commonjs": "off",

		"import/no-default-export": "off",
		"import/no-deprecated": "error",
		"import/no-duplicates": "error",
		"import/no-dynamic-require": "error",
		"import/no-extraneous-dependencies": "off",
		"import/no-internal-modules": [
			"off",
			{
				"allow": []
			}
		],
		"import/no-mutable-exports": "error",
		"import/no-named-as-default": "error",
		"import/no-named-as-default-member": "error",
		"import/no-named-default": "error",
		"import/no-named-export": "off",
		"import/no-namespace": "off",
		"import/no-nodejs-modules": "off",
		"import/no-relative-parent-imports": "off",
		"import/no-restricted-paths": "off",
		"import/no-self-import": "error",
		"import/no-unassigned-import": "off",
		"import/no-unresolved": [
			"error",
			{
				"commonjs": true,
				"caseSensitive": true,
				"caseSensitiveStrict": false
			}
		],
		"import/no-unused-modules": [
			"off",
			{
				"ignoreExports": [],
				"missingExports": true,
				"unusedExports": true
			}
		],
		"import/no-useless-path-segments": [
			"error",
			{
				"commonjs": true
			}
		],
		"import/no-webpack-loader-syntax": "error",

		"import/unambiguous": "off",
		"indent": [
			"off",
			2,
			{
				"SwitchCase": 1,
				"VariableDeclarator": 1,
				"outerIIFEBody": 1,
				"FunctionDeclaration": {
					"parameters": 1,
					"body": 1
				},
				"FunctionExpression": {
					"parameters": 1,
					"body": 1
				},
				"CallExpression": {
					"arguments": 1
				},
				"ArrayExpression": 1,
				"ObjectExpression": 1,
				"ImportDeclaration": 1,
				"flatTernaryExpressions": false,
				"ignoredNodes": [
					"JSXElement",
					"JSXElement > *",
					"JSXAttribute",
					"JSXIdentifier",
					"JSXNamespacedName",
					"JSXMemberExpression",
					"JSXSpreadAttribute",
					"JSXExpressionContainer",
					"JSXOpeningElement",
					"JSXClosingElement",
					"JSXFragment",
					"JSXOpeningFragment",
					"JSXClosingFragment",
					"JSXText",
					"JSXEmptyExpression",
					"JSXSpreadChild"
				],
				"ignoreComments": false,
				"offsetTernaryExpressions": false
			}
		],
		"indent-legacy": "off",
		"init-declarations": "off",
		"jsx-a11y/accessible-emoji": "off",
		"jsx-a11y/alt-text": [
			"error",
			{
				"elements": ["img", "object", "area", "input[type=\"image\"]"],
				"img": [],
				"object": [],
				"area": [],
				"input[type=\"image\"]": []
			}
		],
		"jsx-a11y/anchor-has-content": [
			"error",
			{
				"components": []
			}
		],
		"jsx-a11y/aria-activedescendant-has-tabindex": "error",
		"jsx-a11y/aria-props": "error",
		"jsx-a11y/aria-proptypes": "error",
		"jsx-a11y/aria-role": [
			"error",
			{
				"ignoreNonDOM": false
			}
		],
		"jsx-a11y/aria-unsupported-elements": "error",
		"jsx-a11y/autocomplete-valid": [
			"off",
			{
				"inputComponents": []
			}
		],

		"jsx-a11y/control-has-associated-label": [
			"error",
			{
				"labelAttributes": ["label"],
				"controlComponents": [],
				"ignoreElements": ["audio", "canvas", "embed", "input", "textarea", "tr", "video"],
				"ignoreRoles": ["grid", "listbox", "menu", "menubar", "radiogroup", "row", "tablist", "toolbar", "tree", "treegrid"],
				"depth": 5
			}
		],
		"jsx-a11y/heading-has-content": [
			"error",
			{
				"components": [""]
			}
		],
		"jsx-a11y/html-has-lang": "error",
		"jsx-a11y/iframe-has-title": "error",
		"jsx-a11y/interactive-supports-focus": [
			"error",
			{
				"tabbable": ["button", "checkbox", "link", "searchbox", "spinbutton", "switch", "textbox"]
			}
		],

		"jsx-a11y/label-has-for": [
			"off",
			{
				"components": [],
				"required": {
					"every": ["nesting", "id"]
				},
				"allowChildren": false
			}
		],
		"jsx-a11y/lang": "error",
		"jsx-a11y/media-has-caption": [
			"error",
			{
				"audio": [],
				"video": [],
				"track": []
			}
		],
		"jsx-a11y/mouse-events-have-key-events": "error",
		"jsx-a11y/no-access-key": "error",
		"jsx-a11y/no-autofocus": [
			"error",
			{
				"ignoreNonDOM": true
			}
		],
		"jsx-a11y/no-distracting-elements": [
			"error",
			{
				"elements": ["marquee", "blink"]
			}
		],
		"jsx-a11y/no-interactive-element-to-noninteractive-role": [
			"error",
			{
				"tr": ["none", "presentation"]
			}
		],
		"jsx-a11y/no-noninteractive-element-interactions": [
			"error",
			{
				"handlers": ["onClick", "onMouseDown", "onMouseUp", "onKeyPress", "onKeyDown", "onKeyUp"]
			}
		],
		"jsx-a11y/no-noninteractive-element-to-interactive-role": [
			"error",
			{
				"ul": ["listbox", "menu", "menubar", "radiogroup", "tablist", "tree", "treegrid"],
				"ol": ["listbox", "menu", "menubar", "radiogroup", "tablist", "tree", "treegrid"],
				"li": ["menuitem", "option", "row", "tab", "treeitem"],
				"table": ["grid"],
				"td": ["gridcell"]
			}
		],
		"jsx-a11y/no-noninteractive-tabindex": [
			"error",
			{
				"tags": [],
				"roles": ["tabpanel"]
			}
		],
		"jsx-a11y/no-onchange": "off",
		"jsx-a11y/no-redundant-roles": "error",

		"jsx-a11y/role-has-required-aria-props": "error",
		"jsx-a11y/role-supports-aria-props": "error",
		"jsx-a11y/scope": "error",
		"jsx-a11y/tabindex-no-positive": "error",
		"jsx-quotes": ["off", "prefer-double"],
		"key-spacing": [
			"off",
			{
				"beforeColon": false,
				"afterColon": true
			}
		],
		"keyword-spacing": [
			"off",
			{
				"before": true,
				"after": true,
				"overrides": {
					"return": {
						"after": true
					},
					"throw": {
						"after": true
					},
					"case": {
						"after": true
					}
				}
			}
		],
		"line-comment-position": [
			"off",
			{
				"position": "above",
				"ignorePattern": "",
				"applyDefaultPatterns": true
			}
		],
		"linebreak-style": ["off", "unix"],
		"lines-around-comment": "off",
		"lines-around-directive": [
			"error",
			{
				"before": "always",
				"after": "always"
			}
		],
		"lines-between-class-members": "off",
		"max-classes-per-file": ["error", 1],
		"max-depth": ["off", 4],
		"max-len": [
			"off",
			100,
			2,
			{
				"ignoreUrls": true,
				"ignoreComments": false,
				"ignoreRegExpLiterals": true,
				"ignoreStrings": true,
				"ignoreTemplateLiterals": true
			}
		],
		"max-lines": ["error", 150],
		"max-lines-per-function": [
			"off",
			{
				"max": 50,
				"skipBlankLines": true,
				"skipComments": true,
				"IIFEs": true
			}
		],
		"max-nested-callbacks": "off",
		"max-params": ["off", 3],
		"max-statements": ["off", 10],
		"max-statements-per-line": [
			"off",
			{
				"max": 1
			}
		],
		"multiline-comment-style": ["off", "starred-block"],
		"multiline-ternary": ["off", "never"],
		"new-cap": "off",
		"new-parens": "off",
		"newline-after-var": "off",
		"newline-before-return": "off",
		"newline-per-chained-call": [
			"off",
			{
				"ignoreChainWithDepth": 4
			}
		],
		"no-alert": "warn",
		"no-array-constructor": "error",
		"no-arrow-condition": "off",
		"no-async-promise-executor": "error",
		"no-await-in-loop": "error",
		"no-bitwise": "error",
		"no-buffer-constructor": "error",
		"no-caller": "error",
		"no-case-declarations": "error",
		"no-catch-shadow": "off",
		"no-class-assign": "error",
		"no-comma-dangle": "off",
		"no-compare-neg-zero": "error",
		"no-cond-assign": "error",
		"no-confusing-arrow": [
			"off",
			{
				"allowParens": true
			}
		],
		"no-const-assign": "error",
		"no-constant-condition": "warn",
		"no-constructor-return": "off",
		"no-continue": "error",
		"no-control-regex": "error",
		"no-debugger": "error",
		"no-delete-var": "error",
		"no-div-regex": "off",
		"no-dupe-args": "error",
		"no-dupe-class-members": "error",
		"no-dupe-else-if": "off",
		"no-dupe-keys": "error",
		"no-duplicate-case": "error",
		"no-duplicate-imports": "error",
		"no-else-return": [
			"error",
			{
				"allowElseIf": false
			}
		],
		"no-empty": [
			"error",
			{
				"allowEmptyCatch": true
			}
		],
		"no-empty-character-class": "error",
		"no-empty-function": "off",
		"no-empty-pattern": "error",
		"no-eq-null": "off",
		"no-eval": "error",
		"no-ex-assign": "error",
		"no-extend-native": "error",
		"no-extra-bind": "error",
		"no-extra-label": "error",
		"no-extra-parens": [
			"off",
			"all",
			{
				"conditionalAssign": true,
				"nestedBinaryExpressions": false,
				"returnAssign": false,
				"ignoreJSX": "all",
				"enforceForArrowConditionals": false
			}
		],
		"no-extra-semi": "off",
		"no-fallthrough": "error",
		"no-floating-decimal": "off",
		"no-func-assign": "error",
		"no-global-assign": [
			"error",
			{
				"exceptions": []
			}
		],
		"no-implicit-coercion": [
			"off",
			{
				"boolean": false,
				"number": true,
				"string": true,
				"allow": []
			}
		],
		"no-implicit-globals": "off",
		"no-implied-eval": "error",
		"no-import-assign": "off",
		"no-inline-comments": "off",
		"no-inner-declarations": "error",
		"no-invalid-regexp": "error",
		"no-invalid-this": "error",
		"no-irregular-whitespace": "error",
		"no-iterator": "error",
		"no-label-var": "error",
		"no-labels": [
			"error",
			{
				"allowLoop": false,
				"allowSwitch": false
			}
		],
		"no-lone-blocks": "error",
		"no-lonely-if": "error",
		"no-loop-func": "error",
		"no-loss-of-precision": "off",
		"no-magic-numbers": [
			"off",
			{
				"ignore": [],
				"ignoreArrayIndexes": true,
				"enforceConst": true,
				"detectObjects": false
			}
		],
		"no-misleading-character-class": "error",
		"no-mixed-operators": [
			"off",
			{
				"groups": [
					["%", "**"],
					["%", "+"],
					["%", "-"],
					["%", "*"],
					["%", "/"],
					["/", "*"],
					["&", "|", "<<", ">>", ">>>"],
					["==", "!=", "===", "!=="],
					["&&", "||"]
				],
				"allowSamePrecedence": false
			}
		],
		"no-mixed-requires": ["off", false],
		"no-mixed-spaces-and-tabs": "off",
		"no-multi-assign": "error",
		"no-multi-spaces": [
			"off",
			{
				"ignoreEOLComments": false
			}
		],
		"no-multi-str": "error",
		"no-multiple-empty-lines": "error",
		"no-native-reassign": "off",
		"no-negated-condition": "off",
		"no-negated-in-lhs": "off",
		"no-nested-ternary": "error",
		"no-new": "error",
		"no-new-func": "error",
		"no-new-object": "error",
		"no-new-require": "error",
		"no-new-symbol": "error",
		"no-new-wrappers": "error",
		"no-obj-calls": "error",
		"no-octal": "error",
		"no-octal-escape": "error",
		"no-param-reassign": "error",
		"no-path-concat": "error",
		"no-plusplus": "error",
		"no-process-env": "off",
		"no-process-exit": "off",
		"no-promise-executor-return": "off",
		"no-proto": "error",
		"no-prototype-builtins": "error",
		"no-redeclare": "error",
		"no-regex-spaces": "error",
		"no-reserved-keys": "off",
		"no-restricted-exports": [
			"off",
			{
				"restrictedNamedExports": ["default", "then"]
			}
		],
		"no-restricted-globals": [
			"error",
			{
				"name": "isFinite",
				"message": "Use Number.isFinite instead https://github.com/airbnb/javascript#standard-library--isfinite"
			},
			{
				"name": "isNaN",
				"message": "Use Number.isNaN instead https://github.com/airbnb/javascript#standard-library--isnan"
			},
			"addEventListener",
			"blur",
			"close",
			"closed",
			"confirm",
			"defaultStatus",
			"defaultstatus",
			"event",
			"external",
			"find",
			"focus",
			"frameElement",
			"frames",
			"history",
			"innerHeight",
			"innerWidth",
			"length",
			"location",
			"locationbar",
			"menubar",
			"moveBy",
			"moveTo",
			"name",
			"onblur",
			"onerror",
			"onfocus",
			"onload",
			"onresize",
			"onunload",
			"open",
			"opener",
			"opera",
			"outerHeight",
			"outerWidth",
			"pageXOffset",
			"pageYOffset",
			"parent",
			"print",
			"removeEventListener",
			"resizeBy",
			"resizeTo",
			"screen",
			"screenLeft",
			"screenTop",
			"screenX",
			"screenY",
			"scroll",
			"scrollbars",
			"scrollBy",
			"scrollTo",
			"scrollX",
			"scrollY",
			"self",
			"status",
			"statusbar",
			"stop",
			"toolbar",
			"top"
		],
		"no-restricted-imports": [
			"off",
			{
				"paths": [],
				"patterns": []
			}
		],
		"no-restricted-modules": "off",
		"no-restricted-properties": [
			"error",
			{
				"object": "arguments",
				"property": "callee",
				"message": "arguments.callee is deprecated"
			},
			{
				"object": "global",
				"property": "isFinite",
				"message": "Please use Number.isFinite instead"
			},
			{
				"object": "self",
				"property": "isFinite",
				"message": "Please use Number.isFinite instead"
			},
			{
				"object": "window",
				"property": "isFinite",
				"message": "Please use Number.isFinite instead"
			},
			{
				"object": "global",
				"property": "isNaN",
				"message": "Please use Number.isNaN instead"
			},
			{
				"object": "self",
				"property": "isNaN",
				"message": "Please use Number.isNaN instead"
			},
			{
				"object": "window",
				"property": "isNaN",
				"message": "Please use Number.isNaN instead"
			},
			{
				"property": "__defineGetter__",
				"message": "Please use Object.defineProperty instead."
			},
			{
				"property": "__defineSetter__",
				"message": "Please use Object.defineProperty instead."
			},
			{
				"object": "Math",
				"property": "pow",
				"message": "Use the exponentiation operator (**) instead."
			}
		],

		"no-return-assign": ["error", "always"],
		"no-return-await": "error",
		"no-script-url": "error",
		"no-self-assign": [
			"error",
			{
				"props": true
			}
		],
		"no-self-compare": "error",
		"no-sequences": "error",
		"no-setter-return": "off",
		"no-shadow": "error",
		"no-shadow-restricted-names": "error",
		"no-space-before-semi": "off",
		"no-spaced-func": "off",
		"no-sparse-arrays": "error",
		"no-sync": "off",
		"no-tabs": "off",
		"no-template-curly-in-string": "error",
		"no-ternary": "off",
		"no-this-before-super": "error",
		"no-throw-literal": "error",
		"no-trailing-spaces": [
			"off",
			{
				"skipBlankLines": false,
				"ignoreComments": false
			}
		],
		"no-undef": "error",
		"no-undef-init": "error",
		"no-undefined": "off",
		"no-unexpected-multiline": "off",
		"no-unmodified-loop-condition": "off",
		"no-unneeded-ternary": [
			"error",
			{
				"defaultAssignment": false
			}
		],
		"no-unreachable": "error",
		"no-unreachable-loop": [
			"off",
			{
				"ignore": []
			}
		],
		"no-unsafe-finally": "error",
		"no-unsafe-negation": "error",
		"no-unused-expressions": [
			"error",
			{
				"allowShortCircuit": false,
				"allowTernary": false,
				"allowTaggedTemplates": false,
				"enforceForJSX": false
			}
		],
		"no-unused-labels": "error",
		"no-unused-vars": [
			"error",
			{
				"vars": "all",
				"args": "after-used",
				"ignoreRestSiblings": true
			}
		],

		"no-useless-backreference": "off",
		"no-useless-call": "off",
		"no-useless-catch": "error",
		"no-useless-computed-key": "error",
		"no-useless-concat": "error",
		"no-useless-constructor": "error",
		"no-useless-escape": "error",
		"no-useless-rename": [
			"error",
			{
				"ignoreDestructuring": false,
				"ignoreImport": false,
				"ignoreExport": false
			}
		],
		"no-useless-return": "error",
		"no-var": "error",
		"no-void": "error",
		"no-warning-comments": [
			"off",
			{
				"terms": ["todo", "fixme", "xxx"],
				"location": "start"
			}
		],
		"no-whitespace-before-property": "off",
		"no-with": "error",
		"no-wrap-func": "off",
		"nonblock-statement-body-position": [
			"off",
			"beside",
			{
				"overrides": {}
			}
		],
		"object-curly-newline": [
			"off",
			{
				"ObjectExpression": {
					"minProperties": 4,
					"multiline": true,
					"consistent": true
				},
				"ObjectPattern": {
					"minProperties": 4,
					"multiline": true,
					"consistent": true
				},
				"ImportDeclaration": {
					"minProperties": 4,
					"multiline": true,
					"consistent": true
				},
				"ExportDeclaration": {
					"minProperties": 4,
					"multiline": true,
					"consistent": true
				}
			}
		],
		"object-curly-spacing": ["off", "always"],
		"object-property-newline": [
			"off",
			{
				"allowAllPropertiesOnSameLine": true,
				"allowMultiplePropertiesPerLine": false
			}
		],
		"object-shorthand": [
			"error",
			"always",
			{
				"ignoreConstructors": false,
				"avoidQuotes": true
			}
		],
		"one-var": ["error", "never"],
		"one-var-declaration-per-line": ["off", "always"],
		"operator-assignment": ["error", "always"],
		"operator-linebreak": [
			"off",
			"before",
			{
				"overrides": {
					"=": "none"
				}
			}
		],
		"padded-blocks": [
			"off",
			{
				"blocks": "never",
				"classes": "never",
				"switches": "never"
			},
			{
				"allowSingleLineBlocks": true
			}
		],
		"padding-line-between-statements": "off",
		"prefer-arrow-callback": [
			"error",
			{
				"allowNamedFunctions": false,
				"allowUnboundThis": true
			}
		],
		"prefer-const": "error",
		"prefer-destructuring": [
			"error",
			{
				"VariableDeclarator": {
					"array": false,
					"object": true
				},
				"AssignmentExpression": {
					"array": true,
					"object": false
				}
			},
			{
				"enforceForRenamedProperties": false
			}
		],
		"prefer-exponentiation-operator": "off",
		"prefer-named-capture-group": "off",
		"prefer-numeric-literals": "error",
		"prefer-object-spread": "error",
		"prefer-promise-reject-errors": [
			"error",
			{
				"allowEmptyReject": true
			}
		],
		"prefer-reflect": "off",
		"prefer-regex-literals": "off",
		"prefer-rest-params": "error",
		"prefer-spread": "error",
		"prefer-template": "error",
		"quote-props": [
			"off",
			"as-needed",
			{
				"keywords": false,
				"unnecessary": true,
				"numbers": false
			}
		],
		"quotes": [
			"off",
			"single",
			{
				"avoidEscape": true
			}
		],
		"radix": "error",

		"react-hooks/rules-of-hooks": "error",
		"react/boolean-prop-naming": [
			"off",
			{
				"propTypeNames": ["bool", "mutuallyExclusiveTrueProps"],
				"rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+",
				"message": ""
			}
		],
		"react/button-has-type": [
			"error",
			{
				"button": true,
				"submit": true,
				"reset": false
			}
		],
		"react/default-props-match-prop-types": [
			"error",
			{
				"allowRequiredDefaults": false
			}
		],
		"react/destructuring-assignment": ["error", "always"],
		"react/forbid-component-props": [
			"off",
			{
				"forbid": []
			}
		],
		"react/forbid-dom-props": [
			"off",
			{
				"forbid": []
			}
		],
		"react/forbid-elements": [
			"off",
			{
				"forbid": []
			}
		],
		"react/forbid-foreign-prop-types": [
			"warn",
			{
				"allowInPropTypes": true
			}
		],
		"react/forbid-prop-types": [
			"error",
			{
				"forbid": ["any", "array", "object"],
				"checkContextTypes": true,
				"checkChildContextTypes": true
			}
		],
		"react/function-component-definition": [
			"off",
			{
				"namedComponents": "function-expression",
				"unnamedComponents": "function-expression"
			}
		],
		"react/jsx-boolean-value": [
			"error",
			"never",
			{
				"always": []
			}
		],
		"react/jsx-child-element-spacing": "off",
		"react/jsx-closing-bracket-location": ["off", "line-aligned"],
		"react/jsx-closing-tag-location": "off",
		"react/jsx-curly-brace-presence": [
			"error",
			{
				"props": "never",
				"children": "never"
			}
		],
		"react/jsx-curly-newline": [
			"off",
			{
				"multiline": "consistent",
				"singleline": "consistent"
			}
		],
		"react/jsx-curly-spacing": [
			"off",
			"never",
			{
				"allowMultiline": true
			}
		],
		"react/jsx-equals-spacing": ["off", "never"],
		"react/jsx-first-prop-new-line": ["off", "multiline-multiprop"],

		"react/jsx-handler-names": [
			"off",
			{
				"eventHandlerPrefix": "handle",
				"eventHandlerPropPrefix": "on"
			}
		],
		"react/jsx-indent": ["off", 2],
		"react/jsx-indent-props": ["off", 2],
		"react/jsx-key": "off",
		"react/jsx-max-depth": "off",
		"react/jsx-max-props-per-line": [
			"off",
			{
				"maximum": 1,
				"when": "multiline"
			}
		],
		"react/jsx-newline": "off",
		"react/jsx-no-bind": [
			"error",
			{
				"ignoreRefs": true,
				"allowArrowFunctions": true,
				"allowFunctions": false,
				"allowBind": false,
				"ignoreDOMComponents": true
			}
		],
		"react/jsx-no-comment-textnodes": "error",
		"react/jsx-no-duplicate-props": [
			"error",
			{
				"ignoreCase": true
			}
		],
		"react/jsx-no-literals": [
			"off",
			{
				"noStrings": true
			}
		],
		"react/jsx-no-script-url": [
			"off",
			[
				{
					"name": "Link",
					"props": ["to"]
				}
			]
		],
		"react/jsx-no-target-blank": [
			"error",
			{
				"enforceDynamicLinks": "always",
				"links": true,
				"forms": false
			}
		],
		"react/jsx-no-undef": "error",
		"react/jsx-no-useless-fragment": "off",
		"react/jsx-one-expression-per-line": [
			"off",
			{
				"allow": "single-child"
			}
		],
		"react/jsx-pascal-case": [
			"error",
			{
				"allowAllCaps": true,
				"ignore": []
			}
		],
		"react/jsx-props-no-multi-spaces": "off",

		"react/jsx-sort-default-props": [
			"off",
			{
				"ignoreCase": true
			}
		],
		"react/jsx-sort-prop-types": "off",
		"react/jsx-sort-props": [
			"off",
			{
				"ignoreCase": true,
				"callbacksLast": false,
				"shorthandFirst": false,
				"shorthandLast": false,
				"noSortAlphabetically": false,
				"reservedFirst": true
			}
		],
		"react/jsx-space-before-closing": ["off", "always"],
		"react/jsx-tag-spacing": [
			"off",
			{
				"closingSlash": "never",
				"beforeSelfClosing": "always",
				"afterOpening": "never",
				"beforeClosing": "never"
			}
		],
		"react/jsx-uses-vars": "error",
		"react/jsx-wrap-multilines": [
			"off",
			{
				"declaration": "parens-new-line",
				"assignment": "parens-new-line",
				"return": "parens-new-line",
				"arrow": "parens-new-line",
				"condition": "parens-new-line",
				"logical": "parens-new-line",
				"prop": "parens-new-line"
			}
		],
		"react/no-access-state-in-setstate": "error",
		"react/no-adjacent-inline-elements": "off",

		"react/no-children-prop": "error",
		"react/no-danger": "warn",
		"react/no-danger-with-children": "error",
		"react/no-deprecated": "error",
		"react/no-did-mount-set-state": "off",
		"react/no-did-update-set-state": "error",
		"react/no-direct-mutation-state": "off",
		"react/no-find-dom-node": "error",
		"react/no-is-mounted": "error",
		"react/no-multi-comp": "off",
		"react/no-redundant-should-component-update": "error",
		"react/no-render-return-value": "error",
		"react/no-set-state": "off",
		"react/no-string-refs": "error",
		"react/no-this-in-sfc": "error",
		"react/no-typos": "error",

		"react/no-unknown-property": "error",
		"react/no-unsafe": "off",
		"react/no-unused-prop-types": [
			"error",
			{
				"customValidators": [],
				"skipShapeProps": true
			}
		],
		"react/no-unused-state": "error",
		"react/no-will-update-set-state": "error",
		"react/prefer-es6-class": ["error", "always"],
		"react/prefer-read-only-props": "off",
		"react/prefer-stateless-function": [
			"error",
			{
				"ignorePureComponents": true
			}
		],

		"react/require-optimization": [
			"off",
			{
				"allowDecorators": []
			}
		],
		"react/require-render-return": "error",
		"react/self-closing-comp": "error",
		"react/sort-comp": [
			"error",
			{
				"order": [
					"static-variables",
					"static-methods",
					"instance-variables",
					"lifecycle",
					"/^handle.+$/",
					"/^on.+$/",
					"getters",
					"setters",
					"/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
					"instance-methods",
					"everything-else",
					"rendering"
				],
				"groups": {
					"lifecycle": [
						"displayName",
						"propTypes",
						"contextTypes",
						"childContextTypes",
						"mixins",
						"statics",
						"defaultProps",
						"constructor",
						"getDefaultProps",
						"getInitialState",
						"state",
						"getChildContext",
						"getDerivedStateFromProps",
						"componentWillMount",
						"UNSAFE_componentWillMount",
						"componentDidMount",
						"componentWillReceiveProps",
						"UNSAFE_componentWillReceiveProps",
						"shouldComponentUpdate",
						"componentWillUpdate",
						"UNSAFE_componentWillUpdate",
						"getSnapshotBeforeUpdate",
						"componentDidUpdate",
						"componentDidCatch",
						"componentWillUnmount"
					],
					"rendering": ["/^render.+$/", "render"]
				}
			}
		],
		"react/sort-prop-types": [
			"off",
			{
				"ignoreCase": true,
				"callbacksLast": false,
				"requiredFirst": false,
				"sortShapeProp": true
			}
		],
		"react/state-in-constructor": ["error", "always"],
		"react/static-property-placement": ["error", "property assignment"],
		"react/style-prop-object": "error",
		"react/void-dom-elements-no-children": "error",
		"require-atomic-updates": "off",
		"require-await": "off",
		"require-jsdoc": "off",
		"require-unicode-regexp": "off",
		"require-yield": "error",
		"rest-spread-spacing": ["off", "never"],
		"semi": ["off", "always"],
		"semi-spacing": [
			"off",
			{
				"before": false,
				"after": true
			}
		],
		"semi-style": ["off", "last"],
		"sort-imports": [
			"off",
			{
				"ignoreCase": false,
				"ignoreDeclarationSort": false,
				"ignoreMemberSort": false,
				"memberSyntaxSortOrder": ["none", "all", "multiple", "single"]
			}
		],
		"sort-keys": [
			"off",
			"asc",
			{
				"caseSensitive": false,
				"natural": true
			}
		],
		"sort-vars": "off",
		"space-after-function-name": "off",
		"space-after-keywords": "off",
		"space-before-blocks": "off",
		"space-before-function-paren": [
			"off",
			{
				"anonymous": "always",
				"named": "never",
				"asyncArrow": "always"
			}
		],
		"space-before-function-parentheses": "off",
		"space-before-keywords": "off",
		"space-in-brackets": "off",
		"space-in-parens": ["off", "never"],
		"space-infix-ops": "off",
		"space-return-throw-case": "off",
		"space-unary-ops": [
			"off",
			{
				"words": true,
				"nonwords": false,
				"overrides": {}
			}
		],
		"space-unary-word-ops": "off",
		"spaced-comment": [
			"error",
			"always",
			{
				"line": {
					"exceptions": ["-", "+"],
					"markers": ["=", "!", "/"]
				},
				"block": {
					"exceptions": ["-", "+"],
					"markers": ["=", "!", ":", "::"],
					"balanced": true
				}
			}
		],
		"strict": ["error", "never"],
		"switch-colon-spacing": [
			"off",
			{
				"after": true,
				"before": false
			}
		],
		"symbol-description": "error",
		"template-curly-spacing": "off",
		"template-tag-spacing": ["off", "never"],
		"unicode-bom": ["off", "never"],
		"use-isnan": "error",
		"valid-jsdoc": "off",
		"valid-typeof": [
			"error",
			{
				"requireStringLiterals": true
			}
		],
		"vars-on-top": "error",
		"wrap-iife": [
			"off",
			"outside",
			{
				"functionPrototypeMethods": false
			}
		],
		"wrap-regex": "off",
		"yield-star-spacing": ["off", "after"],
		"yoda": "error"
	},
	"settings": {
		"react": {
			"version": "latest",
			"pragma": "React"
		},
		"import/resolver": {
			"alias": {
				"map": [["@App", "./src"]],
				"extensions": [".ts", ".tsx", ".js", ".jsx", ".json"]
			},
			"node": {
				"extensions": [".js", ".jsx", ".json", ".jsx"]
			},
			"/Users/Bruno/Sites/Node.js/lab77/node_modules/eslint-import-resolver-node/index.js": {
				"extensions": [".js", ".jsx", ".ts", ".tsx"]
			},
			"/Users/Bruno/Sites/Node.js/lab77/node_modules/eslint-import-resolver-typescript/lib/cjs.js": {
				"alwaysTryTypes": true
			}
		},
		"propWrapperFunctions": ["forbidExtraProps", "exact", "Object.freeze"],
		"import/extensions": [".js", ".mjs", ".jsx", ".jsx"],
		"import/core-modules": [],
		"import/ignore": ["node_modules", "\\.(coffee|scss|css|less|hbs|svg|json)$"],
		"import/external-module-folders": ["node_modules", "node_modules/@types"],
		"import/parsers": {
			"@typescript-eslint/parser": [".ts", ".tsx"],
			"/Users/Bruno/Sites/Node.js/lab77/node_modules/@typescript-eslint/parser/dist/index.js": [".ts", ".tsx", ".d.ts"]
		}
	},
	"globals": {
		"JSX": true,
		"NodeJS": true
	}
}
